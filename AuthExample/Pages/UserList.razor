@page "/list"

@if(DataContext is null)
{
    NavManager!.NavigateTo("/error");
}
    
<h3>Список пользователей</h3>
<table class="table table-hover table-sm">
    <thead>
        <tr>
            <th style="text-align:center;">Имя пользователя</th>
            <th style="text-align:center;">Роль пользователя</th>
            <th style="text-align:center;"></th>
            <th style="text-align:center;"></th>
        </tr>
    </thead>
    <tbody>
        @if (Users!.Any<User>())
        {
            @foreach (var user in Users!)
            {
                <tr>
                    <td style="text-align:center;">@user.Login</td>
                    <td style="text-align:center;">@user.Role</td>
                    <td style="text-align:center;"><a href="/changepassword" class="btn btn btn-primary" >Сменить пароль</a></td>
                    <td style="text-align:center;"><a class="btn btn-primary" @onclick="@(() => HandleDeleteButtonClick(user))">Удалить пользователя</a></td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="4">Список пользователей пуст</td> </tr>
        }

    </tbody>
</table>
<a href="/create" class="btn btn-primary" >Создать пользователя</a>
@code {
    [Inject] DataContext? DataContext { get; set; }
    [Inject] NavigationManager? NavManager { get; set; }
    IEnumerable<User>? Users { get; set; }

    protected override void OnInitialized()
    {
        if(Users is null)
        {
            Users = DataContext!.Users;
        }
        base.OnInitialized();
    }

    void HandleDeleteButtonClick(User user)
    {
        DataContext!.Users.Remove(user);
        DataContext!.SaveChanges();
    }
}
